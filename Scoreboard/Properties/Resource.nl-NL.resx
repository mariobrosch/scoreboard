<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="and" xml:space="preserve">
    <value>en</value>
  </data>
  <data name="completeRemove" xml:space="preserve">
    <value>Volledig verwijderen?</value>
  </data>
  <data name="continueMatch" xml:space="preserve">
    <value>Verder gaan met deze wedstrijd?</value>
  </data>
  <data name="exportOnlyLocalstorage" xml:space="preserve">
    <value>Exporteren van data alleen voor local storage mogelijk.</value>
  </data>
  <data name="hasWon" xml:space="preserve">
    <value>heeft gewonnen</value>
  </data>
  <data name="help" xml:space="preserve">
    <value>Help!</value>
  </data>
  <data name="help1" xml:space="preserve">
    <value>Gebruik je toetsenbord om score op te hogen.\r\nVoor linkerteam gelden de volgende sneltoetsen:</value>
  </data>
  <data name="help2" xml:space="preserve">
    <value>L, Linker shift, Links, Numpad 7</value>
  </data>
  <data name="help3" xml:space="preserve">
    <value>Voor het rechterteam:</value>
  </data>
  <data name="help4" xml:space="preserve">
    <value>R, Rechter shift, Rechts, Numpad 9</value>
  </data>
  <data name="help5" xml:space="preserve">
    <value>Z en numpad 1 voor minpunt linker team</value>
  </data>
  <data name="help6" xml:space="preserve">
    <value>X en numpad 3 voor minpunt rechterteam</value>
  </data>
  <data name="highscore" xml:space="preserve">
    <value>Topscore</value>
  </data>
  <data name="matchPlayedErrorDesc" xml:space="preserve">
    <value>Wedstrijd is al gepseeld, punten bewerken niet mogelijk.</value>
  </data>
  <data name="matchTypeRemovedDescription" xml:space="preserve">
    <value>Speltype wordt verwijderd. Speltype heeft geen wedstrijd data</value>
  </data>
  <data name="new" xml:space="preserve">
    <value>Nieuw</value>
  </data>
  <data name="NoDataFound" xml:space="preserve">
    <value>Geen data gevonden</value>
  </data>
  <data name="NoMatchesFound" xml:space="preserve">
    <value>Geen wedstrijden gevonden</value>
  </data>
  <data name="noMatchTypesFound" xml:space="preserve">
    <value>Geen wedstrijd types gevonden, maak er eerst eentje aan voordat een spel gemaakt kan worden.</value>
  </data>
  <data name="notEnoughPlayers" xml:space="preserve">
    <value>Minimaal 2 spelers nodig voordat een spel gestart kan worden. Maak eerst spelers aan.</value>
  </data>
  <data name="NoUnfinishedMatches" xml:space="preserve">
    <value>Geen wedstrijden zonder winnaar gevonden, een nieuwe starten?</value>
  </data>
  <data name="OpenPhoto" xml:space="preserve">
    <value>Selecteer een foto voor de speler</value>
  </data>
  <data name="played" xml:space="preserve">
    <value>gespeeld</value>
  </data>
  <data name="recentMatch1" xml:space="preserve">
    <value>Eén recente (laatste week) wedstrijd gevonden tussen</value>
  </data>
  <data name="remove" xml:space="preserve">
    <value>Verwijderen?</value>
  </data>
  <data name="RemoveMatchType" xml:space="preserve">
    <value>Verwijderen van dit speltype?</value>
  </data>
  <data name="removePlayer" xml:space="preserve">
    <value>Verwijderen van deze speler?</value>
  </data>
  <data name="RemovePlayerCompletely" xml:space="preserve">
    <value>Speler wordt verwijderd. Speler heeft geen wedstrijd data</value>
  </data>
  <data name="RemovePlayerCompletelyTitle" xml:space="preserve">
    <value>Volledig verwijderen?</value>
  </data>
  <data name="SaveCanceled" xml:space="preserve">
    <value>Opslaan geannuleerd</value>
  </data>
  <data name="SaveZip" xml:space="preserve">
    <value>Opslaan backup zip bestand</value>
  </data>
  <data name="setPlayedErrorDesc" xml:space="preserve">
    <value>Set is al gespeeld, punten bewerken niet mogelijk</value>
  </data>
  <data name="setsPlayed" xml:space="preserve">
    <value>sets gespeeld</value>
  </data>
  <data name="setupErrorDescription" xml:space="preserve">
    <value>Speler kan niet meerdere keren opgesteld worden</value>
  </data>
  <data name="setupErrorTitle" xml:space="preserve">
    <value>Opstellingsfout</value>
  </data>
  <data name="singlePlayerStat" xml:space="preserve">
    <value>gespeeld waarvan de hoogste score op</value>
  </data>
  <data name="standings" xml:space="preserve">
    <value>Stand is</value>
  </data>
  <data name="startNextSet" xml:space="preserve">
    <value>Start volgende set?</value>
  </data>
  <data name="team" xml:space="preserve">
    <value>Team</value>
  </data>
  <data name="thereAre" xml:space="preserve">
    <value>Er zijn</value>
  </data>
  <data name="withMatchType" xml:space="preserve">
    <value>met als speltype</value>
  </data>
  <data name="won" xml:space="preserve">
    <value>gewonnen</value>
  </data>
</root>